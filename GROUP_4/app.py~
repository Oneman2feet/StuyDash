from flask import Flask,url_for,redirect,flash,session,escape,request,render_template
from pymongo import connection
import random
from random import choice
import upcoming
import movies
import login
import espn


app = Flask(__name__)
app.secret_key = 'some_secret'

@app.route("/help",methods=["GET","POST"])
def help():
    return render_template("help.html")

@app.route("/about",methods=["GET","POST"])
def about():
    return render_template("about.html")

@app.route("/",methods=["GET","POST"])
def user():
    global username
    if request.method == "GET":
        return render_template("user.html")

    if request.method == "POST":
        if request.form["button"] == "Submit":
            username = str(request.form['username'])
            print username
            login.newUser(username)
            login.username(username)
            return render_template("user.html")
            return redirect(url_for('home'))

        if request.form["button"] == "Login":
            username = str(request.form['login'])
            if(login.username(username) != -1):
                return redirect(url_for('home'))
            else:
                return render_template("user.html")

@app.route("/home", methods= ["GET","POST"])
def home():
    global headlines
    global username
    if request.method == "GET":
        print "get!!"
        return render_template("survey2.html", username = username)
    else:
        r1 = request.form['zipcode'] ##returns Zipcode
        print r1
        r2 = request.form['select1'] ##returns fav. baseball team
        print r2
        r3 = request.form['Genres'] 
        print r3
        r4 = request.form['Categories']
        print r4

##Saving Team preferences using mongo ##
        login.saveTeamID(username, r2)
        login.test(username)

        ## API Interactions HERE ##
    
        s3 = upcoming.getEventInfo(r3,r1,"id")
        x = random.choice(s3.keys())
        print upcoming.getEventIDInfo(x,"start_date")
        try:
            uname1 =  upcoming.getEventIDInfo(x,"start_date")    
        except:
            uname1 = ""
            
        try:
            udescription1 =  upcoming.getEventIDInfo(x,"description")
        except:
            udescription1 = ""
        try:
            date1 = upcoming.getEventIDInfo(x,"start_date")
        except:
            date1 = ""
        try:
            time1 = upcoming.getEventIDInfo(x,"start_time")
        except:
            time1 = ""
        try:
            url1 = upcoming.getEventIDInfo(x,"url")
        except:
            url1 = ""
        try:
            venuename1 = upcoming.getEventIDInfo(x,"venue_name")
        except:
            venuename1 = ""
        try:
            venueaddress1 = upcoming.getEventIDInfo(x,"venue_address")
        except:
            venueaddress1  = ""
        try:
            venuecity1 = upcoming.getEventIDInfo(x,"venue_city")
        except:
            venuecity1 = ""
        try:
            buytickets1 = upcoming.getEventIDInfo(x,"ticket_url")
        except:
            buytickets1 = ""
        
        try:
            s4 = upcoming.getEventInfo(r4,r1,"id")
            y = random.choice(s4.keys())
            uname2 =  upcoming.getEventIDInfo(y,"name")
            udescription2 =  upcoming.getEventIDInfo(y,"description")
            date2 = upcoming.getEventIDInfo(y,"start_date")
            time2 = upcoming.getEventIDInfo(y,"start_time")
            url2 = upcoming.getEventIDInfo(y,"url")
            venuename2 = upcoming.getEventIDInfo(y,"venue_name")
            venueaddress2 = upcoming.getEventIDInfo(y,"venue_address")
            venuecity2 = upcoming.getEventIDInfo(y,"venue_city")
            buytickets2 = upcoming.getEventIDInfo(y,"ticket_url")
        except:
            uname2 = ""
            udescription2 = ""
            date2 = ""
            time2 = ""
            url2 = ""
            venuename2 =""
            venueaddress2 = ""
            venuecity2 =""
            buytickets2= ""

        
        movies_available = movies.getMovieNames()
        movie = choice(movies_available)
        print movie
        synopsis = movies.getSynopsis(movie)
        print synopsis
        #teamId = espn.getTeamID(r2)
        description1 = " "
        description2 = "ESPN API is down"
        description3 = " " 
        try:
            teamId = login.getTeamID(username)
            headline1 = espn.getHeadline(teamId, 0)
            headline2 = espn.getHeadline(teamId, 1)
            headline3 = espn.getHeadline(teamId, 2)
            description1 = espn.getDescription(teamId, 0)
            description2 = espn.getDescription(teamId, 1)
            description3 = espn.getDescription(teamId, 2)
        #team = espn.getName(espn.getTeam(teamId))

        except:
            pass
        return render_template("results.html", 
                               username = username,
                               name=uname1,
                               description = udescription1,
                               movie = movie,
                               #team = team,
                               synopsis = synopsis, 
                               headline1 = headline1,
                               headline2 = headline2,
                               headline3 = headline3,
                               description1 = description1,
                               description2 = description2,
                               description3 = description3,
                               name2 = uname2,
                               udescription2 = udescription2,
                               url1 = url1,
                               venuename1 = venuename1,
                               venueaddress1 = venueaddress1,
                               venuecity1 = venuecity1,
                               buytickets1 = buytickets1,
                               date1 = date1,
                               time1 = time1,
                               url2 = url2,
                               venuename2 = venuename2,
                               venueaddress2 = venueaddress2,
                               venuecity2 = venuecity2,
                               buytickets2 = buytickets2,
                               date2 = date2,
                               time2 = time2)


if __name__ == "__main__":
    app.run(debug = True)
